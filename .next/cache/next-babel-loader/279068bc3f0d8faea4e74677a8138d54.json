{"ast":null,"code":"import fetch from 'node-fetch';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloClient } from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-boost';\nimport { HttpLink } from 'apollo-boost';\nimport { mainQuery } from './queries';\nimport { useQuery } from '@apollo/react-hooks'; //const link = new HttpLink({ uri : 'https://testing-hasura-me.herokuapp.com/v1/graphql'});\n\nconst link = createHttpLink({\n  uri: 'https://glikaki.herokuapp.com/v1/graphql',\n  fetch: fetch\n});\nconst resolvers = {};\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link,\n  resolvers\n});\nlet cacheData = undefined;\n\ntry {\n  cacheData = client.readQuery({\n    query: mainQuery\n  });\n  console.log('found it!!!!!!!!!!');\n} catch (error) {\n  console.log(\"No client data yet\");\n  console.log(error);\n  cacheData = {};\n}\n\nlet changed = true; // <INSERT INITIALIZATION CODE HERE>\n\nif (changed) {\n  client.writeQuery({\n    query: mainQuery,\n    data: {\n      pame: 1,\n      dio: 2\n    }\n  });\n} // const { mydata } = client.readQuery({\n//     query: gql`\n//       query myQuery {\n//         Artist {\n//           Name\n//           ArtistId\n//         }\n//         Album {\n//           Title\n//           AlbumId\n//         }\n//       }\n//     `,\n//   });\n\n\nexport default client;","map":{"version":3,"sources":["/Users/marinoschrysanthou/Desktop/nextjs-apollo-connect-test/src/client.js"],"names":["fetch","createHttpLink","ApolloClient","InMemoryCache","HttpLink","mainQuery","useQuery","link","uri","resolvers","client","cache","cacheData","undefined","readQuery","query","console","log","error","changed","writeQuery","data","pame","dio"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAAQC,SAAR,QAAwB,WAAxB;AACA,SAASC,QAAT,QAAyB,qBAAzB,C,CAEA;;AACA,MAAMC,IAAI,GAAGN,cAAc,CAAC;AAAEO,EAAAA,GAAG,EAAE,0CAAP;AAAmDR,EAAAA,KAAK,EAAEA;AAA1D,CAAD,CAA3B;AACA,MAAMS,SAAS,GAAG,EAAlB;AACA,MAAMC,MAAM,GAAG,IAAIR,YAAJ,CAAiB;AAC5BS,EAAAA,KAAK,EAAG,IAAIR,aAAJ,EADoB;AAE5BI,EAAAA,IAF4B;AAG5BE,EAAAA;AAH4B,CAAjB,CAAf;AAOA,IAAIG,SAAS,GAAGC,SAAhB;;AAEA,IAAI;AACAD,EAAAA,SAAS,GAAGF,MAAM,CAACI,SAAP,CAAiB;AAAEC,IAAAA,KAAK,EAAEV;AAAT,GAAjB,CAAZ;AACAW,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,CAHD,CAGE,OAAOC,KAAP,EAAc;AACZF,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYC,KAAZ;AACAN,EAAAA,SAAS,GAAG,EAAZ;AACH;;AAED,IAAIO,OAAO,GAAG,IAAd,C,CAEA;;AAEA,IAAIA,OAAJ,EAAa;AACTT,EAAAA,MAAM,CAACU,UAAP,CAAkB;AACdL,IAAAA,KAAK,EAAEV,SADO;AAEdgB,IAAAA,IAAI,EAAE;AAACC,MAAAA,IAAI,EAAC,CAAN;AAAQC,MAAAA,GAAG,EAAC;AAAZ;AAFQ,GAAlB;AAIH,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,eAAeb,MAAf","sourcesContent":["import fetch from 'node-fetch';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloClient } from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-boost';\nimport { HttpLink } from 'apollo-boost';\n\nimport {mainQuery} from './queries';\nimport { useQuery } from '@apollo/react-hooks';\n\n//const link = new HttpLink({ uri : 'https://testing-hasura-me.herokuapp.com/v1/graphql'});\nconst link = createHttpLink({ uri: 'https://glikaki.herokuapp.com/v1/graphql', fetch: fetch });\nconst resolvers = {}\nconst client = new ApolloClient({ \n    cache : new InMemoryCache(), \n    link, \n    resolvers \n});\n\n\nlet cacheData = undefined\n\ntry {\n    cacheData = client.readQuery({ query: mainQuery })\n    console.log('found it!!!!!!!!!!')\n} catch (error) {\n    console.log(\"No client data yet\")\n    console.log(error)\n    cacheData = {}\n}\n\nlet changed = true\n\n// <INSERT INITIALIZATION CODE HERE>\n\nif (changed) {\n    client.writeQuery({\n        query: mainQuery,\n        data: {pame:1,dio:2},\n    })\n}\n\n// const { mydata } = client.readQuery({\n//     query: gql`\n//       query myQuery {\n//         Artist {\n//           Name\n//           ArtistId\n//         }\n//         Album {\n//           Title\n//           AlbumId\n//         }\n//       }\n//     `,\n//   });\n\nexport default client;"]},"metadata":{},"sourceType":"module"}