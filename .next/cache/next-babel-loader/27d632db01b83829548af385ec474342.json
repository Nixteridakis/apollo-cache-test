{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/marinoschrysanthou/Desktop/nextjs-apollo-connect-test/src/App.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"{\\n  Album {\\n    Title\\n  }\\n}\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { Button } from '@material-ui/core';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nconst myQuery = gql(_templateObject());\n\nfunction App() {\n  const {\n    data\n  } = useQuery(myQuery);\n  console.log(data);\n  return __jsx(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Hello, I hold \", data ? data.Album.length : 'No', \" Objects Hello, I hold \", data ? data.Album.length : 'No', \" Objects Hello, I hold \", data ? data.Album.length : 'No', \" Objects Hello, I hold \", data ? data.Album.length : 'No', \" Objects Hello, I hold \", data ? data.Album.length : 'No', \" Objects Hello, I hold \", data ? data.Album.length : 'No', \" Objects\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, \"I also have a cool button\"), __jsx(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, \"Like me!\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marinoschrysanthou/Desktop/nextjs-apollo-connect-test/src/App.js"],"names":["React","Button","useQuery","gql","myQuery","App","data","console","log","Album","length"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,mBAAvB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,OAAO,GAAGD,GAAH,mBAAb;;AAOA,SAASE,GAAT,GAAe;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,QAAQ,CAACE,OAAD,CAAzB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBACiBA,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAWC,MAAd,GAAuB,IAD5C,6BAEiBJ,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAWC,MAAd,GAAuB,IAF5C,6BAGiBJ,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAWC,MAAd,GAAuB,IAH5C,6BAIiBJ,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAWC,MAAd,GAAuB,IAJ5C,6BAKiBJ,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAWC,MAAd,GAAuB,IAL5C,6BAMiBJ,IAAI,GAAGA,IAAI,CAACG,KAAL,CAAWC,MAAd,GAAuB,IAN5C,aADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iCAVF,EAWE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,WAAhB;AAA4B,IAAA,KAAK,EAAC,SAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,CADF,CADF;AAmBD;;AAED,eAAeL,GAAf","sourcesContent":["import React from 'react';\nimport { Button } from '@material-ui/core';\n\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\n\nconst myQuery = gql`{\n  Album {\n    Title\n  }\n}\n`;\n\nfunction App() {\n  const { data } = useQuery(myQuery);\n  console.log(data)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n         Hello, I hold { data ? data.Album.length : 'No' } Objects\n         Hello, I hold { data ? data.Album.length : 'No' } Objects\n         Hello, I hold { data ? data.Album.length : 'No' } Objects\n         Hello, I hold { data ? data.Album.length : 'No' } Objects\n         Hello, I hold { data ? data.Album.length : 'No' } Objects\n         Hello, I hold { data ? data.Album.length : 'No' } Objects\n\n        </p>\n        <div>I also have a cool button</div>\n        <Button variant=\"contained\" color=\"primary\">Like me!</Button>\n      </header>\n\n\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}