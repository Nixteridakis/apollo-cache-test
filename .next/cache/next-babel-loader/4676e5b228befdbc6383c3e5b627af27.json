{"ast":null,"code":"var _jsxFileName = \"/Users/marinoschrysanthou/Desktop/nextjs-apollo-connect-test/src/Index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport App from './App';\nimport fetch from 'node-fetch';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloClient } from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-boost';\nimport { HttpLink } from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\nimport { readQuery } from '@apollo/react-hooks';\nconst cache = new InMemoryCache(); //const link = new HttpLink({ uri : 'https://testing-hasura-me.herokuapp.com/v1/graphql'});\n\nconst link = createHttpLink({\n  uri: 'https://glikaki.herokuapp.com/v1/graphql',\n  fetch: fetch\n});\nconst resolvers = {};\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link,\n  resolvers\n});\nconst {\n  mydata\n} = client.readQuery({\n  query: gql`\n      query myQuery {\n        Artist {\n          Name\n          ArtistId\n        }\n        Album {\n          Title\n          AlbumId\n        }\n      }\n    `\n});\nconsole.log(mydata);\nexport default function Index() {\n  return __jsx(ApolloProvider, {\n    client: client,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(App, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }));\n} // If you want your app to work offline and load faster, you can change                                                                                                                  \n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA","map":{"version":3,"sources":["/Users/marinoschrysanthou/Desktop/nextjs-apollo-connect-test/src/Index.js"],"names":["React","App","fetch","createHttpLink","ApolloClient","InMemoryCache","HttpLink","ApolloProvider","readQuery","cache","link","uri","resolvers","client","mydata","query","gql","console","log","Index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;AAEA,OAAOC,KAAP,MAAkB,YAAlB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,QAAT,QAAyB,cAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;AAEA,SAASC,SAAT,QAA0B,qBAA1B;AAGA,MAAMC,KAAK,GAAG,IAAIJ,aAAJ,EAAd,C,CACA;;AACA,MAAMK,IAAI,GAAGP,cAAc,CAAC;AAAEQ,EAAAA,GAAG,EAAE,0CAAP;AAAmDT,EAAAA,KAAK,EAAEA;AAA1D,CAAD,CAA3B;AACA,MAAMU,SAAS,GAAG,EAAlB;AACA,MAAMC,MAAM,GAAG,IAAIT,YAAJ,CAAiB;AAC5BK,EAAAA,KAAK,EAAG,IAAIJ,aAAJ,EADoB;AAE5BK,EAAAA,IAF4B;AAG5BE,EAAAA;AAH4B,CAAjB,CAAf;AAMA,MAAM;AAAEE,EAAAA;AAAF,IAAaD,MAAM,CAACL,SAAP,CAAiB;AAChCO,EAAAA,KAAK,EAAEC,GAAI;;;;;;;;;;;;AADqB,CAAjB,CAAnB;AAeEC,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AAEF,eAAe,SAASK,KAAT,GAAiB;AAC5B,SACI,MAAC,cAAD;AAAgB,IAAA,MAAM,EAAEN,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ;AAKH,C,CAED;AACA;AACA","sourcesContent":["import React from 'react';\nimport App from './App';\n\nimport fetch from 'node-fetch';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloClient } from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-boost';\nimport { HttpLink } from 'apollo-boost';\nimport { ApolloProvider } from '@apollo/react-hooks';\n\nimport { readQuery } from '@apollo/react-hooks';\n\n\nconst cache = new InMemoryCache();\n//const link = new HttpLink({ uri : 'https://testing-hasura-me.herokuapp.com/v1/graphql'});\nconst link = createHttpLink({ uri: 'https://glikaki.herokuapp.com/v1/graphql', fetch: fetch });\nconst resolvers = {}\nconst client = new ApolloClient({ \n    cache : new InMemoryCache(), \n    link, \n    resolvers \n});\n\nconst { mydata } = client.readQuery({\n    query: gql`\n      query myQuery {\n        Artist {\n          Name\n          ArtistId\n        }\n        Album {\n          Title\n          AlbumId\n        }\n      }\n    `,\n  });\n\n  console.log(mydata)\n\nexport default function Index (){\n    return(   \n        <ApolloProvider client={client}>\n            <App />\n        </ApolloProvider>\n    )\n}\n\n// If you want your app to work offline and load faster, you can change                                                                                                                  \n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"]},"metadata":{},"sourceType":"module"}