{"ast":null,"code":"var _jsxFileName = \"/Users/marinoschrysanthou/Desktop/nextjs-apollo-connect-test/src/App.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\nconst myQuery = gql`\n{\n    swp_article {\n          title \n    }\n}\n`;\n\nfunction App() {\n  const {\n    data\n  } = useQuery(myQuery);\n  console.log(data);\n  return __jsx(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18\n    },\n    __self: this\n  }, __jsx(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, \"Hello and Hello there! Am i static?\")));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/marinoschrysanthou/Desktop/nextjs-apollo-connect-test/src/App.js"],"names":["React","useQuery","gql","myQuery","App","data","console","log"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAMC,OAAO,GAAGD,GAAI;;;;;;CAApB;;AAQA,SAASE,GAAT,GAAe;AACb,QAAM;AAAEC,IAAAA;AAAF,MAAWJ,QAAQ,CAACE,OAAD,CAAzB;AACAG,EAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACA,SACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAQ,IAAA,SAAS,EAAC,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CADF,CADF,CADF;AASD;;AAED,eAAeD,GAAf","sourcesContent":["import React from 'react';\n\nimport { useQuery } from '@apollo/react-hooks';\nimport gql from \"graphql-tag\";\n\nconst myQuery = gql`\n{\n    swp_article {\n          title \n    }\n}\n`;\n\nfunction App() {\n  const { data } = useQuery(myQuery);\n  console.log(data)\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n         Hello and Hello there! Am i static?\n        </p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}