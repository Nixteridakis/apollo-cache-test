{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/marinoschrysanthou/Desktop/nextjs-apollo-connect-test/src/About.js\";\nvar __jsx = React.createElement;\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    query myQuery {\\n      Artist {\\n        Name\\n        ArtistId\\n      }\\n      Album {\\n        Title\\n        AlbumId\\n      }\\n    }\\n  \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport { readQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\nconst {\n  mydata\n} = client.readQuery({\n  query: gql(_templateObject())\n});\nconsole.log(mydata);\n\nconst About = () => {\n  return __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"This is the about page\"), __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"I hold  \"));\n};\n\nexport default About;","map":{"version":3,"sources":["/Users/marinoschrysanthou/Desktop/nextjs-apollo-connect-test/src/About.js"],"names":["React","readQuery","gql","mydata","client","query","console","log","About"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AAEA,MAAM;AAAEC,EAAAA;AAAF,IAAaC,MAAM,CAACH,SAAP,CAAiB;AAClCI,EAAAA,KAAK,EAAEH,GAAF;AAD6B,CAAjB,CAAnB;AAeAI,OAAO,CAACC,GAAR,CAAYJ,MAAZ;;AAEA,MAAMK,KAAK,GAAG,MAAM;AAClB,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,CADF;AAMD,CAPD;;AASA,eAAeA,KAAf","sourcesContent":["import React from 'react';\n\nimport { readQuery } from '@apollo/react-hooks';\nimport gql from 'graphql-tag';\n\nconst { mydata } = client.readQuery({\n  query: gql`\n    query myQuery {\n      Artist {\n        Name\n        ArtistId\n      }\n      Album {\n        Title\n        AlbumId\n      }\n    }\n  `,\n});\n\nconsole.log(mydata)\n\nconst About = () => {\n  return (\n    <div>\n      <h1>This is the about page</h1>\n      <h3>I hold  </h3>\n    </div>\n  )\n};\n\nexport default About;"]},"metadata":{},"sourceType":"module"}