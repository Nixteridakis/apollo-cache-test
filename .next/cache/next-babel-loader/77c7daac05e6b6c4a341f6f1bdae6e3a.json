{"ast":null,"code":"import _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"{\\n  Artist @client {\\n    Name\\n    ArtistId\\n  }\\n  Album @client {\\n    Title\\n    AlbumId\\n  }\\n}\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  query {\\n    Artist {\\n      Name\\n      ArtistId\\n    }\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  query($artistId: Int ) {\\n    Artist(where: {ArtistId: {_eq: $artistId}}){\\n      Name\\n      ArtistId\\n    }\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag'; // export const MAIN_QUERY = gql`{\n//     Artist {\n//       Name\n//       ArtistId\n//     }\n// }`;\n\nexport const MAIN_QUERY = gql(_templateObject());\nexport const MAIN_QUERY_CACHE = gql(_templateObject2()); // const GET_DOG_PHOTO = gql`\n//   query Dog($breed: String!) {\n//     dog(breed: $breed) {\n//       id\n//       displayImage\n//     }\n//   }\n// `;\n\nexport const mainQueryCache = gql(_templateObject3());","map":{"version":3,"sources":["/Users/marinoschrysanthou/Funke Development/tests/nextjs-apollo-connect-test/src/queries.js"],"names":["gql","MAIN_QUERY","MAIN_QUERY_CACHE","mainQueryCache"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB,C,CAEA;AACA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,UAAU,GAAGD,GAAH,mBAAhB;AASP,OAAO,MAAME,gBAAgB,GAAGF,GAAH,oBAAtB,C,CASP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMG,cAAc,GAAGH,GAAH,oBAApB","sourcesContent":["import gql from 'graphql-tag';\n\n// export const MAIN_QUERY = gql`{\n//     Artist {\n//       Name\n//       ArtistId\n//     }\n// }`;\n\n\nexport const MAIN_QUERY = gql`\n  query($artistId: Int ) {\n    Artist(where: {ArtistId: {_eq: $artistId}}){\n      Name\n      ArtistId\n    }\n  }\n`;\n\nexport const MAIN_QUERY_CACHE = gql`\n  query {\n    Artist {\n      Name\n      ArtistId\n    }\n  }\n`;\n\n// const GET_DOG_PHOTO = gql`\n//   query Dog($breed: String!) {\n//     dog(breed: $breed) {\n//       id\n//       displayImage\n//     }\n//   }\n// `;\n\nexport const mainQueryCache = gql`{\n  Artist @client {\n    Name\n    ArtistId\n  }\n  Album @client {\n    Title\n    AlbumId\n  }\n}\n`;"]},"metadata":{},"sourceType":"module"}