{"ast":null,"code":"import fetch from 'node-fetch';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloClient } from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-boost';\nimport { HttpLink } from 'apollo-boost';\nimport { readQuery } from '@apollo/react-hooks';\nimport { mainQuery } from './queries'; //const link = new HttpLink({ uri : 'https://testing-hasura-me.herokuapp.com/v1/graphql'});\n\nconst link = createHttpLink({\n  uri: 'https://glikaki.herokuapp.com/v1/graphql',\n  fetch: fetch\n});\nconst resolvers = {};\nconst client = new ApolloClient({\n  cache: new InMemoryCache(),\n  link,\n  resolvers\n});\nconst {\n  somedata\n} = client.readQuery({\n  query: mainQuery\n});\nconsole.log(somedata); // const { mydata } = client.readQuery({\n//     query: gql`\n//       query myQuery {\n//         Artist {\n//           Name\n//           ArtistId\n//         }\n//         Album {\n//           Title\n//           AlbumId\n//         }\n//       }\n//     `,\n//   });\n\nexport default client;","map":{"version":3,"sources":["/Users/marinoschrysanthou/Desktop/nextjs-apollo-connect-test/src/client.js"],"names":["fetch","createHttpLink","ApolloClient","InMemoryCache","HttpLink","readQuery","mainQuery","link","uri","resolvers","client","cache","somedata","query","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,YAAlB;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,YAAT,QAA6B,cAA7B;AACA,SAASC,aAAT,QAA8B,cAA9B;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,SAASC,SAAT,QAA0B,qBAA1B;AAGC,SAAQC,SAAR,QAAwB,WAAxB,C,CAED;;AACA,MAAMC,IAAI,GAAGN,cAAc,CAAC;AAAEO,EAAAA,GAAG,EAAE,0CAAP;AAAmDR,EAAAA,KAAK,EAAEA;AAA1D,CAAD,CAA3B;AACA,MAAMS,SAAS,GAAG,EAAlB;AACA,MAAMC,MAAM,GAAG,IAAIR,YAAJ,CAAiB;AAC5BS,EAAAA,KAAK,EAAG,IAAIR,aAAJ,EADoB;AAE5BI,EAAAA,IAF4B;AAG5BE,EAAAA;AAH4B,CAAjB,CAAf;AAOC,MAAM;AAAEG,EAAAA;AAAF,IAAeF,MAAM,CAACL,SAAP,CAAiB;AAAEQ,EAAAA,KAAK,EAAEP;AAAT,CAAjB,CAArB;AAEAQ,OAAO,CAACC,GAAR,CAAYH,QAAZ,E,CACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,eAAeF,MAAf","sourcesContent":["import fetch from 'node-fetch';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloClient } from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-boost';\nimport { HttpLink } from 'apollo-boost';\n\nimport { readQuery } from '@apollo/react-hooks';\n\n\n import {mainQuery} from './queries';\n\n//const link = new HttpLink({ uri : 'https://testing-hasura-me.herokuapp.com/v1/graphql'});\nconst link = createHttpLink({ uri: 'https://glikaki.herokuapp.com/v1/graphql', fetch: fetch });\nconst resolvers = {}\nconst client = new ApolloClient({ \n    cache : new InMemoryCache(), \n    link, \n    resolvers \n});\n\n\n const { somedata } = client.readQuery({ query: mainQuery });\n\n console.log(somedata)\n// const { mydata } = client.readQuery({\n//     query: gql`\n//       query myQuery {\n//         Artist {\n//           Name\n//           ArtistId\n//         }\n//         Album {\n//           Title\n//           AlbumId\n//         }\n//       }\n//     `,\n//   });\n\nexport default client;"]},"metadata":{},"sourceType":"module"}