{"ast":null,"code":"var _jsxFileName = \"/Users/marinoschrysanthou/Funke Development/tests/nextjs-apollo-connect-test/src/App.js\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { useQuery } from '@apollo/react-hooks';\nimport Link from 'next/link';\nimport { MAIN_QUERY, MAIN_QUERY_CACHE } from './queries';\nimport client from './client';\nimport Myradio from './Myradio';\nimport Myresult from './Myresult.js';\nimport { UserContext } from './UserContext';\nconst useStyles = makeStyles({\n  nextPage: {\n    margin: '50px'\n  }\n});\n\nconst App = () => {\n  const classes = useStyles();\n  const {\n    0: store,\n    1: setStore\n  } = useState([]);\n  const {\n    0: cachedArtist,\n    1: setArtist\n  } = useState('');\n  const {\n    data\n  } = useQuery(MAIN_QUERY, {\n    variables: {\n      artistId: store\n    }\n  });\n\n  const ReadmyQyery = id => {\n    const myCache = client.readQuery({\n      query: MAIN_QUERY,\n      variables: {\n        artistId: id\n      }\n    });\n    setArtist(myCache.Artist[0].Name);\n  };\n\n  return __jsx(UserContext.Provider, {\n    value: [store, setStore],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(\"header\", {\n    className: \"App-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \" Select an artist\"), __jsx(Myradio, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), __jsx(Myresult, {\n    data: data,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), __jsx(Button, {\n    variant: \"contained\",\n    onClick: () => ReadmyQyery('1'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, \"Read Cached Artist 1\"), __jsx(Button, {\n    variant: \"contained\",\n    onClick: () => ReadmyQyery('2'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Read Cached Artist 2\"), __jsx(Button, {\n    variant: \"contained\",\n    onClick: () => ReadmyQyery('3'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Read Cached Artist 3\"), __jsx(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Cached: \", cachedArtist, \" \"), __jsx(Link, {\n    classNames: classes.nextPage,\n    href: \"/artists\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"secondary\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"See all Artists\"))));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/marinoschrysanthou/Funke Development/tests/nextjs-apollo-connect-test/src/App.js"],"names":["React","useState","Button","makeStyles","useQuery","Link","MAIN_QUERY","MAIN_QUERY_CACHE","client","Myradio","Myresult","UserContext","useStyles","nextPage","margin","App","classes","store","setStore","cachedArtist","setArtist","data","variables","artistId","ReadmyQyery","id","myCache","readQuery","query","Artist","Name"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport { Button } from '@material-ui/core';\nimport {makeStyles} from '@material-ui/core/styles'\n\nimport { useQuery } from '@apollo/react-hooks';\nimport Link from 'next/link' ;\n\nimport {MAIN_QUERY, MAIN_QUERY_CACHE} from './queries';\nimport client from './client'\n\nimport Myradio from './Myradio'\nimport Myresult from './Myresult.js'\nimport { UserContext } from './UserContext';\n\n\nconst useStyles = makeStyles({\n  nextPage: {\n    margin: '50px',\n  }\n})\n\nconst App = () => {\n  const classes = useStyles()\n  const [store, setStore] = useState([]);\n  const [cachedArtist, setArtist] = useState('');\n\n  const { data } = useQuery(MAIN_QUERY,{\n    variables: {\n      artistId : store\n    }\n  });\n\n\n  const ReadmyQyery = (id) => {\n    const myCache = client.readQuery({\n      query: MAIN_QUERY,\n      variables: { artistId : id }\n    });\n    setArtist(myCache.Artist[0].Name)\n  }\n\n  return (\n    \n    <UserContext.Provider value={[store,setStore]}>\n      <div className=\"App\">\n        <header className=\"App-header\"> Select an artist</header>\n        <Myradio />\n        <Myresult data={data}/>\n        <Button variant=\"contained\" onClick={()=> ReadmyQyery('1')}>Read Cached Artist 1</Button>\n        <Button variant=\"contained\" onClick={()=> ReadmyQyery('2')}>Read Cached Artist 2</Button>\n        <Button variant=\"contained\" onClick={()=> ReadmyQyery('3')}>Read Cached Artist 3</Button>\n        <div>Cached: {cachedArtist} </div>\n        <Link classNames={classes.nextPage} href=\"/artists\">\n          <Button variant=\"outlined\" color=\"secondary\">See all Artists</Button>\n        </Link>\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}