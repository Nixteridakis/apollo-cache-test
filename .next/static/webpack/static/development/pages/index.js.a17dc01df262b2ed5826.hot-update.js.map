{"version":3,"file":"static/webpack/static/development/pages/index.js.a17dc01df262b2ed5826.hot-update.js","sources":["webpack:///./src/client.js"],"sourcesContent":["import fetch from 'node-fetch';\nimport { createHttpLink } from 'apollo-link-http';\nimport { ApolloClient } from 'apollo-boost';\nimport { InMemoryCache } from 'apollo-boost';\nimport { HttpLink } from 'apollo-boost';\n\nimport {MAIN_QUERY} from './queries';\nimport { useQuery } from '@apollo/react-hooks';\n\n//const link = new HttpLink({ uri : 'https://testing-hasura-me.herokuapp.com/v1/graphql'});\nconst link = createHttpLink({ uri: 'https://glikaki.herokuapp.com/v1/graphql', fetch: fetch });\nconst resolvers = {}\nconst cache = new InMemoryCache()\n\nconst client = new ApolloClient({ \n    cache, \n    link, \n    resolvers \n});\n\n\nlet cacheData = 'Non'\n\ntry {\n    cacheData = client.readQuery({ query: MAIN_QUERY })\n    console.log('found it!!!!!!!!!!')\n} catch (error) {\n    console.log(\"No client data yet\")\n    console.log(error)\n    cacheData = {}\n}\n\n// let changed = true\n\n// <INSERT INITIALIZATION CODE HERE>\n\n// if (changed) {\n//     client.writeQuery({\n//         query: mainQuery,\n//         data: cacheData,\n//     })\n// }\n\n// const { mydata } = client.readQuery({\n//     query: gql`\n//       query myQuery {\n//         Artist {\n//           Name\n//           ArtistId\n//         }\n//         Album {\n//           Title\n//           AlbumId\n//         }\n//       }\n//     `,\n//   });\n\nexport default client;"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAHA;AAOA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;A","sourceRoot":""}