{"version":3,"file":"static/webpack/static/development/pages/index.js.df06e5d6399d6a01d0f6.hot-update.js","sources":["webpack:///./src/App.js"],"sourcesContent":["import React, {useState} from 'react';\nimport { Button } from '@material-ui/core';\n\nimport { useQuery } from '@apollo/react-hooks';\nimport Link from 'next/link' ;\n\nimport {MAIN_QUERY, MAIN_QUERY_CACHE} from './queries';\nimport client from './client'\n\nimport Myradio from './Myradio'\nimport Myresult from './Myresult.js'\nimport { UserContext } from './UserContext';\n\nconst App = () => {\n  const [store, setStore] = useState([]);\n  const [cachedArtist, setArtist] = useState('');\n\n  const { data } = useQuery(MAIN_QUERY,{\n    variables: {\n      artistId : store\n    }\n  });\n\n\n  const ReadmyQyery = (id) => {\n    const myCache = client.readQuery({\n      query: MAIN_QUERY,\n      variables: { artistId : id }\n    });\n    setArtist(myCache.Artist[0].Name)\n  }\n\n  return (\n    <UserContext.Provider value={[store,setStore]}>\n      <div className=\"App\">\n        <header className=\"App-header\"> Select an artist</header>\n        <Myradio />\n        <Myresult data={data}/>\n        <Button variant=\"contained\" onClick={()=> ReadmyQyery('1')}>Read Cached Artist 1</Button>\n        <Button variant=\"contained\" onClick={()=> ReadmyQyery('2')}>Read Cached Artist 2</Button>\n        <Button variant=\"contained\" onClick={()=> ReadmyQyery('3')}>Read Cached Artist 3</Button>\n        <div className=\"cached\">\n          <h4>Cached: </h4><h3>{cachedArtist}</h3> </div>\n        {/* <Link className={classes.nextPage} href=\"/artists\">\n          <Button variant=\"outlined\" color=\"secondary\">See all Artists</Button>\n        </Link> */}\n      </div>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AACA;AADA;AADA;AACA;AAMA;AACA;AACA;AACA;AAAA;AAAA;AAFA;AAIA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AACA;AACA;;;;A","sourceRoot":""}